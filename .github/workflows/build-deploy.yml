name: Build and Deploy

on:
  release:
    types:
      - published

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    environment: Production
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js 14.x
        uses: actions/setup-node@v2
        with:
          node-version: '14.x'
      - name: Use Php 7.4
        uses: shivammathur/setup-php@v2
        with:
          php-version: '7.4'
      - name: Generate Dotenv
        uses: SpicyPizza/create-envfile@v1
        with:
          envkey_GOOGLE_RECAPTCHA_SERVER_KEY: ${{ secrets.GOOGLE_RECAPTCHA_SERVER_KEY }}
          envkey_MAIL_SMTP: ${{ secrets.MAIL_SMTP }}
          envkey_MAIL_PORT: ${{ secrets.MAIL_PORT }}
          envkey_MAIL_USERNAME: ${{ secrets.MAIL_USERNAME }}
          envkey_MAIL_PASSWORD: ${{ secrets.MAIL_PASSWORD }}
          directory: ./scripts
          file_name: .env
      - name: Cache node modules
        id: node-cache
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-npm-
      - name: Cache composer packages
        id: composer-cache
        uses: actions/cache@v2
        with:
          path: vendor
          key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-php-
      - name: Install NPM dependecies
        run: npm ci
      - name: Install Composer dependencies
        run: composer install --prefer-dist --no-progress
      - name: Build
        run: npm run build --if-present
        env:
          GOOGLE_VERIFICATION: ${{ secrets.GOOGLE_VERIFICATION }}
          BING_VERIFICATION: ${{ secrets.BING_VERIFICATION }}
          YANDEX_VERIFICATION: ${{ secrets.YANDEX_VERIFICATION }}
          GOOGLE_ANALYTICS: ${{ secrets.GOOGLE_ANALYTICS }}
          GOOGLE_RECAPTCHA_SITEKEY: ${{ secrets.GOOGLE_RECAPTCHA_SITEKEY }}
      - name: Cache build
        id: build-cache
        uses: actions/cache@v2
        with:
          path: ./public
          key: build-${{ github.sha }}

  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    environment: Production
    needs: [build]
    steps:
      - uses: actions/checkout@v2
      - name: Restore build
        uses: actions/cache@v2
        id: build-cache
        with:
          path: ./public
          key: build-${{ github.sha }}
      - name: Deploy
        uses: SamKirkland/FTP-Deploy-Action@4.1.0
        with:
          server: ${{ secrets.FTP_SERVER }}
          username: ${{ secrets.FTP_USERNAME }}
          password: ${{ secrets.FTP_PASSWORD }}
          server-dir: ${{ secrets.FTP_PATH }}
          local-dir: ./public/
          exclude: >
            - cgi-bin
            - .ftp-deploy-sync-state.json
          dangerous-clean-slate: true
